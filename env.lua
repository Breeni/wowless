local UNIMPLEMENTED = function() end

local uiobjectTypes = {
  actor = {},
  animationgroup = {},
  button = {
    inherits = 'frame',
  },
  checkbutton = {
    inherits = 'button',
  },
  font = {},
  fontfamily = {},
  fontstring = {},
  frame = {},
  gametooltip = {},
  modelscene = {},
  playermodel = {},
  scrollframe = {},
  slider = {},
  statusbar = {},
  texture = {},
}

local function _InheritsFrom(a, b)
  a, b = string.lower(a), string.lower(b)
  while a ~= nil and a ~= b do
    a = uiobjectTypes[a].inherits
  end
  return a ~= nil
end

local function _IsUIObjectType(t)
  return uiobjectTypes[string.lower(t)] ~= nil
end

local frameTemplates = {}

local function _CreateUIObject(t)
  assert(t.type, 'must specify type for ' .. tostring(t.name))
  local type = uiobjectTypes[string.lower(t.type)]
  assert(type, 'unknown type ' .. t.type .. ' for ' .. tostring(t.name))
  for template in string.gmatch(t.inherits or '', '[^, ]+') do
    -- TODO figure out how to deal with unknown templates, maybe just ignore?
    if not frameTemplates[template] then
      print('ignoring unknown template ' .. template .. ' for frame ' .. tostring(t.name))
    end
  end
  if t.virtual then
    assert(t.name, 'cannot create anonymous virtual frame')
    frameTemplates[t.name] = true
    return nil
  end
  local frame = {
    Hide = UNIMPLEMENTED,
    RegisterEvent = UNIMPLEMENTED,
    SetForbidden = UNIMPLEMENTED,
    SetScript = UNIMPLEMENTED,
    SetSize = UNIMPLEMENTED,
  }
  if t.name then
    _G[t.name] = frame
  end
  return frame
end

local globals = {
  CreateFrame = function(type, name)
    assert(_InheritsFrom(type, 'frame'), type .. ' does not inherit from frame')
    return _CreateUIObject({
      name = name,
      type = type,
    })
  end,
  C_Club = {},
  C_GamePad = {},
  C_ScriptedAnimations = {
    GetAllScriptedAnimationEffects = function()
      return {}  -- UNIMPLEMENTED
    end,
  },
  C_Timer = {
    After = UNIMPLEMENTED,
  },
  C_VoiceChat = {},
  C_Widget = {},
  Enum = setmetatable({}, {
    __index = function(_, k)
      return setmetatable({}, {
        __index = function(_, k2)
          return 'AUTOGENERATED:Enum:' .. k .. ':' .. k2
        end,
      })
    end,
  }),
  FillLocalizedClassList = UNIMPLEMENTED,
  format = string.format,
  GetInventorySlotInfo = function()
    return 'UNIMPLEMENTED'
  end,
  GetItemQualityColor = function()
    return 0, 0, 0  -- UNIMPLEMENTED
  end,
  IsGMClient = UNIMPLEMENTED,
  IsOnGlueScreen = UNIMPLEMENTED,
  issecure = UNIMPLEMENTED,
  newproxy = function()
    return setmetatable({}, {})
  end,
  NUM_LE_ITEM_QUALITYS = 10,  -- UNIMPLEMENTED
  RegisterStaticConstants = UNIMPLEMENTED,
  securecall = UNIMPLEMENTED,
  seterrorhandler = UNIMPLEMENTED,
  UnitRace = function()
    return 'Human', 'Human', 1  -- UNIMPLEMENTED
  end,
  UnitSex = function()
    return 2  -- UNIMPLEMENTED
  end,
}

for k, v in pairs(globals) do
  _G[k] = v
end

local globalStrings = {
  -- luacheck: no max line length
  CONFIRM_CONTINUE = 'Do you wish to continue?',
  GUILD_REPUTATION_WARNING_GENERIC = 'You will lose one rank of guild reputation with your previous guild.',
  REMOVE_GUILDMEMBER_LABEL = 'Are you sure you want to remove %s from the guild?',
  VOID_STORAGE_DEPOSIT_CONFIRMATION = 'Depositing this item will remove all modifications and make it non-refundable and non-tradeable.',
}

for k, v in pairs(globalStrings) do
  _G[k] = v
end

return {
  CreateUIObject = _CreateUIObject,
  IsUIObjectType = _IsUIObjectType,
}
